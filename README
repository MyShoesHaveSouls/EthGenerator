
Memory updated
Here are the step-by-step commands to set up a Python virtual environment, activate it, initialize CUDA, and install the necessary libraries on an Ubuntu environment. I'll also provide a requirements.txt file for easy installation.

1. Create a Virtual Environment
Open your terminal and navigate to the directory where you want to create your virtual environment.


python3 -m venv myenv
This creates a virtual environment named myenv.

2. Activate the Virtual Environment
Activate the virtual environment with the following command:


source myenv/bin/activate
You should see (myenv) at the beginning of your terminal prompt, indicating that the virtual environment is active.

3. Install Required Libraries
Create a requirements.txt file with the following content:


web3
numpy
numba
Install the required libraries using the requirements.txt file:


pip install -r requirements.txt

4. Initialize CUDA
Ensure that you have CUDA and the necessary NVIDIA drivers installed. Follow these steps to install CUDA:

a. Install NVIDIA Driver
Install the NVIDIA driver suitable for your GPU. You can find the right driver on the NVIDIA website.

You can install the driver using:


sudo apt update
sudo apt install nvidia-driver-<version>
Replace <version> with the appropriate version number.

b. Install CUDA Toolkit
Download the CUDA Toolkit from NVIDIA's official site.

Install CUDA Toolkit:


sudo dpkg -i cuda-repo-<distro>_<version>_amd64.deb
sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 7fa2af80
sudo apt-get update
sudo apt-get install cuda
Replace <distro> with your Ubuntu distribution (e.g., ubuntu2204) and <version> with the CUDA version (e.g., 11.8.0).

Add CUDA to PATH:

Add the following lines to your ~/.bashrc or ~/.zshrc file:

bash
Copy code
export PATH=/usr/local/cuda/bin:$PATH
export LD_LIBRARY_PATH=/usr/local/cuda/lib64:$LD_LIBRARY_PATH
Then, reload the shell configuration:


source ~/.bashrc
5. Verify CUDA Installation
You can verify the CUDA installation with the following command:


nvcc --version
You should see output indicating the CUDA version installed.

6. Install Numba with CUDA Support
Numba should already be installed via requirements.txt, but ensure it's installed correctly:

pip install numba
Summary
Create and activate virtual environment:


python3 -m venv myenv
source myenv/bin/activate
Create requirements.txt with:


web3
numpy
numba
Install libraries:

pip install -r requirements.txt
Install NVIDIA drivers and CUDA toolkit following the CUDA installation steps provided.

Verify CUDA installation:


nvcc --version
This setup ensures that you have a clean Python environment with all necessary libraries and CUDA installed for GPU acceleration.
